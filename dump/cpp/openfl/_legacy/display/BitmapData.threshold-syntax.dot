digraph graphname {
n3320 [shape=box,label="(3320)\nmemory.position = 0\nbitmapData.setPixels(sourceRect, memory)\nvar _hx_tmp = bitmapData.get_rect()\nthis.copyPixels(bitmapData, _hx_tmp, destPoint, null, null, null)\nopenfl._legacy.Memory.select(null)\nreturn hits"];
n3319 [shape=box,label="(3319)"];
n3318 [shape=box,label="(3318)"];
n3317 [shape=box,label="(3317)"];
n3316 [shape=box,label="(3316)"];
n3315 [shape=box,label="(3315)"];
n3314 [shape=box,label="(3314)\nvar _hx_tmp = canvasMemory + position\nvar _hx_tmp = openfl._legacy.Memory.getI32(_hx_tmp)\nopenfl._legacy.Memory.setI32(position, _hx_tmp)"];
n3313 [shape=box,label="(3313)"];
n3312 [shape=box,label="(3312)\nhits = hits + 1"];
n3311 [shape=box,label="(3311)\nvar copySource = copySource\n@:cond-branch copySource"];
n3311 -> n3314[style="dashed",color="gray",label="then"];
n3311 -> n3315[style="dashed",color="gray",label="next"];
n3310 [shape=box,label="(3310)\nopenfl._legacy.Memory.setI32(position, color)"];
n3310 -> n3312[style="dashed",color="gray",label="sub"];
n3310 -> n3313[style="dashed",color="gray",label="next"];
n3309 [shape=box,label="(3309)\nvar test = test\n@:cond-branch test"];
n3309 -> n3310[style="dashed",color="gray",label="then"];
n3309 -> n3311[style="dashed",color="gray",label="else"];
n3309 -> n3316[style="dashed",color="gray",label="next"];
n3308 [shape=box,label="(3308)"];
n3307 [shape=box,label="(3307)"];
n3306 [shape=box,label="(3306)"];
n3305 [shape=box,label="(3305)"];
n3304 [shape=box,label="(3304)"];
n3303 [shape=box,label="(3303)"];
n3302 [shape=box,label="(3302)\ntest = true"];
n3301 [shape=box,label="(3301)\ntest = i == 1"];
n3300 [shape=box,label="(3300)\nvar test = ! i == 0\n@:cond-branch test"];
n3300 -> n3301[style="dashed",color="gray",label="then"];
n3300 -> n3302[style="dashed",color="gray",label="else"];
n3300 -> n3303[style="dashed",color="gray",label="next"];
n3299 [shape=box,label="(3299)"];
n3298 [shape=box,label="(3298)\ntest = true"];
n3297 [shape=box,label="(3297)\ntest = i == -1"];
n3296 [shape=box,label="(3296)\nvar _hx_tmp = operation == \">=\"\n@:cond-branch _hx_tmp"];
n3296 -> n3300[style="dashed",color="gray",label="then"];
n3296 -> n3304[style="dashed",color="gray",label="next"];
n3295 [shape=box,label="(3295)\nvar test = ! i == 0\n@:cond-branch test"];
n3295 -> n3297[style="dashed",color="gray",label="then"];
n3295 -> n3298[style="dashed",color="gray",label="else"];
n3295 -> n3299[style="dashed",color="gray",label="next"];
n3294 [shape=box,label="(3294)\nvar _hx_tmp = operation == \"<=\"\n@:cond-branch _hx_tmp"];
n3294 -> n3295[style="dashed",color="gray",label="then"];
n3294 -> n3296[style="dashed",color="gray",label="else"];
n3294 -> n3305[style="dashed",color="gray",label="next"];
n3293 [shape=box,label="(3293)\ntest = i != 0"];
n3292 [shape=box,label="(3292)\nvar _hx_tmp = operation == \"!=\"\n@:cond-branch _hx_tmp"];
n3292 -> n3293[style="dashed",color="gray",label="then"];
n3292 -> n3294[style="dashed",color="gray",label="else"];
n3292 -> n3306[style="dashed",color="gray",label="next"];
n3291 [shape=box,label="(3291)\ntest = i == 1"];
n3290 [shape=box,label="(3290)\nvar _hx_tmp = operation == \">\"\n@:cond-branch _hx_tmp"];
n3290 -> n3291[style="dashed",color="gray",label="then"];
n3290 -> n3292[style="dashed",color="gray",label="else"];
n3290 -> n3307[style="dashed",color="gray",label="next"];
n3289 [shape=box,label="(3289)\ntest = i == -1"];
n3288 [shape=box,label="(3288)\nvar _hx_tmp = operation == \"<\"\n@:cond-branch _hx_tmp"];
n3288 -> n3289[style="dashed",color="gray",label="then"];
n3288 -> n3290[style="dashed",color="gray",label="else"];
n3288 -> n3308[style="dashed",color="gray",label="next"];
n3287 [shape=box,label="(3287)\ntest = i == 0"];
n3286 [shape=box,label="(3286)\n`3 = `3 + 1\nvar xx = `3 - 1\nvar position = xx + sx\nvar position = yy + sy\nvar position = position * sw\nvar position = position + position\nposition = position * 4\npixelValue = openfl._legacy.Memory.getI32(position)\npixelMask = cast pixelValue & mask\ni = openfl._legacy.display.BitmapData.__ucompare(pixelMask, thresholdMask)\ntest = false\nvar _hx_tmp = operation == \"==\"\n@:cond-branch _hx_tmp"];
n3286 -> n3287[style="dashed",color="gray",label="then"];
n3286 -> n3288[style="dashed",color="gray",label="else"];
n3286 -> n3309[style="dashed",color="gray",label="next"];
n3285 [shape=box,label="(3285)\nbreak"];
n3284 [shape=box,label="(3284)\nvar _hx_tmp = ! ((`3 < `2))\n@:cond-branch _hx_tmp"];
n3284 -> n3285[style="dashed",color="gray",label="then"];
n3284 -> n3286[style="dashed",color="gray",label="next"];
n3283 [shape=box,label="<loop-head>
(3283)"];
n3282 [shape=box,label="(3282)\nwhile ((true)) @:block 3284"];
n3282 -> n3283[style="dashed",color="gray",label="loop-head"];
n3282 -> n3284[style="dashed",color="gray",label="loop-body"];
n3282 -> n3317[style="dashed",color="gray",label="next"];
n3281 [shape=box,label="(3281)\nvar `3 = 0\nvar `2 = dw"];
n3281 -> n3282[style="dashed",color="gray",label="merge"];
n3280 [shape=box,label="(3280)\n`1 = `1 + 1\nvar yy = `1 - 1"];
n3280 -> n3281[style="dashed",color="gray",label="sub"];
n3280 -> n3318[style="dashed",color="gray",label="next"];
n3279 [shape=box,label="(3279)\nbreak"];
n3278 [shape=box,label="(3278)\nvar _hx_tmp = ! ((`1 < `))\n@:cond-branch _hx_tmp"];
n3278 -> n3279[style="dashed",color="gray",label="then"];
n3278 -> n3280[style="dashed",color="gray",label="next"];
n3277 [shape=box,label="<loop-head>
(3277)"];
n3276 [shape=box,label="(3276)\nwhile ((true)) @:block 3278"];
n3276 -> n3277[style="dashed",color="gray",label="loop-head"];
n3276 -> n3278[style="dashed",color="gray",label="loop-body"];
n3276 -> n3319[style="dashed",color="gray",label="next"];
n3275 [shape=box,label="(3275)\nvar `1 = 0\nvar ` = dh"];
n3275 -> n3276[style="dashed",color="gray",label="merge"];
n3274 [shape=box,label="(3274)\nmemory.position = 0\nopenfl._legacy.Memory.select(memory)\nvar thresholdMask = cast threshold & mask\nvar position\nvar pixelMask\nvar pixelValue\nvar i\nvar test"];
n3274 -> n3275[style="dashed",color="gray",label="sub"];
n3274 -> n3320[style="dashed",color="gray",label="next"];
n3273 [shape=box,label="(3273)\nmemory.writeBytes(pixels, null, null)"];
n3272 [shape=box,label="(3272)\nvar totalMemory = canvasMemory + sourceMemory\nvar memory = new openfl._legacy.utils.ByteArray(null)\nmemory.setLength(totalMemory)\nmemory.position = 0\nvar bitmapData = sourceBitmapData.clone()\nvar pixels = bitmapData.getPixels(sourceRect)\nmemory.writeBytes(pixels, null, null)\nmemory.position = canvasMemory\nvar copySource = copySource\n@:cond-branch copySource"];
n3272 -> n3273[style="dashed",color="gray",label="then"];
n3272 -> n3274[style="dashed",color="gray",label="next"];
n3271 [shape=box,label="(3271)\nvar sourceMemory = sw * sh\nsourceMemory = sourceMemory * 4"];
n3270 [shape=box,label="(3270)\nvar hits = 0\nvar threshold = threshold & 255\nvar threshold = threshold << 24\nvar threshold = threshold >> 8\nvar threshold = threshold & 255\nvar threshold = threshold << 16\nvar threshold = threshold | threshold\nvar threshold = threshold >> 16\nvar threshold = threshold & 255\nvar threshold = threshold << 8\nvar threshold = threshold | threshold\nvar threshold = threshold >> 24\nvar threshold = threshold & 255\nthreshold = threshold | threshold\nvar color = color & 255\nvar color = color << 24\nvar color = color >> 8\nvar color = color & 255\nvar color = color << 16\nvar color = color | color\nvar color = color >> 16\nvar color = color & 255\nvar color = color << 8\nvar color = color | color\nvar color = color >> 24\nvar color = color & 255\ncolor = color | color\nvar canvasMemory = sw * sh\nvar canvasMemory = canvasMemory * 4\nvar sourceMemory = 0\nvar copySource = copySource\n@:cond-branch copySource"];
n3270 -> n3271[style="dashed",color="gray",label="then"];
n3270 -> n3272[style="dashed",color="gray",label="next"];
n3269 [shape=box,label="(3269)\ndh = sh"];
n3268 [shape=box,label="(3268)\nvar dh = this.get_height()\nvar dh = dh - sh\nvar dh = dh - dy\ndh = sh + dh"];
n3267 [shape=box,label="(3267)\nvar dh\nvar dh = bw < 0\n@:cond-branch dh"];
n3267 -> n3268[style="dashed",color="gray",label="then"];
n3267 -> n3269[style="dashed",color="gray",label="else"];
n3267 -> n3270[style="dashed",color="gray",label="next"];
n3266 [shape=box,label="(3266)\ndw = sw"];
n3265 [shape=box,label="(3265)\nvar dw = this.get_width()\nvar dw = dw - sw\nvar dw = dw - dx\ndw = sw + dw"];
n3264 [shape=box,label="(3264)\nmemory.position = 0\nvar _hx_tmp = this.get_rect()\nthis.setPixels(_hx_tmp, memory)\nopenfl._legacy.Memory.select(null)\nreturn hits"];
n3263 [shape=box,label="(3263)"];
n3262 [shape=box,label="(3262)"];
n3261 [shape=box,label="(3261)"];
n3260 [shape=box,label="(3260)"];
n3259 [shape=box,label="(3259)"];
n3258 [shape=box,label="(3258)\nhits = hits + 1"];
n3257 [shape=box,label="(3257)\nopenfl._legacy.Memory.setI32(position, color)"];
n3257 -> n3258[style="dashed",color="gray",label="sub"];
n3257 -> n3259[style="dashed",color="gray",label="next"];
n3256 [shape=box,label="(3256)\nvar test = test\n@:cond-branch test"];
n3256 -> n3257[style="dashed",color="gray",label="then"];
n3256 -> n3260[style="dashed",color="gray",label="next"];
n3255 [shape=box,label="(3255)"];
n3254 [shape=box,label="(3254)"];
n3253 [shape=box,label="(3253)"];
n3252 [shape=box,label="(3252)"];
n3251 [shape=box,label="(3251)"];
n3250 [shape=box,label="(3250)"];
n3249 [shape=box,label="(3249)\ntest = true"];
n3248 [shape=box,label="(3248)\ntest = i == 1"];
n3247 [shape=box,label="(3247)\nvar test = ! i == 0\n@:cond-branch test"];
n3247 -> n3248[style="dashed",color="gray",label="then"];
n3247 -> n3249[style="dashed",color="gray",label="else"];
n3247 -> n3250[style="dashed",color="gray",label="next"];
n3246 [shape=box,label="(3246)"];
n3245 [shape=box,label="(3245)\ntest = true"];
n3244 [shape=box,label="(3244)\ntest = i == -1"];
n3243 [shape=box,label="(3243)\nvar _hx_tmp = operation == \">=\"\n@:cond-branch _hx_tmp"];
n3243 -> n3247[style="dashed",color="gray",label="then"];
n3243 -> n3251[style="dashed",color="gray",label="next"];
n3242 [shape=box,label="(3242)\nvar test = ! i == 0\n@:cond-branch test"];
n3242 -> n3244[style="dashed",color="gray",label="then"];
n3242 -> n3245[style="dashed",color="gray",label="else"];
n3242 -> n3246[style="dashed",color="gray",label="next"];
n3241 [shape=box,label="(3241)\nvar _hx_tmp = operation == \"<=\"\n@:cond-branch _hx_tmp"];
n3241 -> n3242[style="dashed",color="gray",label="then"];
n3241 -> n3243[style="dashed",color="gray",label="else"];
n3241 -> n3252[style="dashed",color="gray",label="next"];
n3240 [shape=box,label="(3240)\ntest = i != 0"];
n3239 [shape=box,label="(3239)\nvar _hx_tmp = operation == \"!=\"\n@:cond-branch _hx_tmp"];
n3239 -> n3240[style="dashed",color="gray",label="then"];
n3239 -> n3241[style="dashed",color="gray",label="else"];
n3239 -> n3253[style="dashed",color="gray",label="next"];
n3238 [shape=box,label="(3238)\ntest = i == 1"];
n3237 [shape=box,label="(3237)\nvar _hx_tmp = operation == \">\"\n@:cond-branch _hx_tmp"];
n3237 -> n3238[style="dashed",color="gray",label="then"];
n3237 -> n3239[style="dashed",color="gray",label="else"];
n3237 -> n3254[style="dashed",color="gray",label="next"];
n3236 [shape=box,label="(3236)\ntest = i == -1"];
n3235 [shape=box,label="(3235)\nvar _hx_tmp = operation == \"<\"\n@:cond-branch _hx_tmp"];
n3235 -> n3236[style="dashed",color="gray",label="then"];
n3235 -> n3237[style="dashed",color="gray",label="else"];
n3235 -> n3255[style="dashed",color="gray",label="next"];
n3234 [shape=box,label="(3234)\ntest = i == 0"];
n3233 [shape=box,label="(3233)\n`3 = `3 + 1\nvar xx = `3 - 1\nvar position = width_yy + xx\nposition = position * 4\npixelValue = openfl._legacy.Memory.getI32(position)\npixelMask = cast pixelValue & mask\ni = openfl._legacy.display.BitmapData.__ucompare(pixelMask, thresholdMask)\ntest = false\nvar _hx_tmp = operation == \"==\"\n@:cond-branch _hx_tmp"];
n3233 -> n3234[style="dashed",color="gray",label="then"];
n3233 -> n3235[style="dashed",color="gray",label="else"];
n3233 -> n3256[style="dashed",color="gray",label="next"];
n3232 [shape=box,label="(3232)\nbreak"];
n3231 [shape=box,label="(3231)\nvar _hx_tmp = ! ((`3 < `2))\n@:cond-branch _hx_tmp"];
n3231 -> n3232[style="dashed",color="gray",label="then"];
n3231 -> n3233[style="dashed",color="gray",label="next"];
n3230 [shape=box,label="<loop-head>
(3230)"];
n3229 [shape=box,label="(3229)\nwhile ((true)) @:block 3231"];
n3229 -> n3230[style="dashed",color="gray",label="loop-head"];
n3229 -> n3231[style="dashed",color="gray",label="loop-body"];
n3229 -> n3261[style="dashed",color="gray",label="next"];
n3228 [shape=box,label="(3228)\nvar `3 = 0\nvar `2 = this.get_width()"];
n3228 -> n3229[style="dashed",color="gray",label="merge"];
n3227 [shape=box,label="(3227)\n`1 = `1 + 1\nvar yy = `1 - 1\nvar width_yy = this.get_width()\nwidth_yy = width_yy * yy"];
n3227 -> n3228[style="dashed",color="gray",label="sub"];
n3227 -> n3262[style="dashed",color="gray",label="next"];
n3226 [shape=box,label="(3226)\nbreak"];
n3225 [shape=box,label="(3225)\nvar _hx_tmp = ! ((`1 < `))\n@:cond-branch _hx_tmp"];
n3225 -> n3226[style="dashed",color="gray",label="then"];
n3225 -> n3227[style="dashed",color="gray",label="next"];
n3224 [shape=box,label="<loop-head>
(3224)"];
n3223 [shape=box,label="(3223)\nwhile ((true)) @:block 3225"];
n3223 -> n3224[style="dashed",color="gray",label="loop-head"];
n3223 -> n3225[style="dashed",color="gray",label="loop-body"];
n3223 -> n3263[style="dashed",color="gray",label="next"];
n3222 [shape=box,label="(3222)\nvar `1 = 0\nvar ` = this.get_height()"];
n3222 -> n3223[style="dashed",color="gray",label="merge"];
n3221 [shape=box,label="(3221)\nvar sx = Std.int(sourceRect.x)\nvar sy = Std.int(sourceRect.y)\nvar sw = sourceBitmapData.get_width()\nvar sw = Std.int(sw)\nvar sh = sourceBitmapData.get_height()\nvar sh = Std.int(sh)\nvar dx = Std.int(destPoint.x)\nvar dy = Std.int(destPoint.y)\nvar bw = this.get_width()\nvar bw = bw - sw\nvar bw = bw - dx\nvar bh = this.get_height()\nvar bh = bh - sh\nvar bh = bh - dy\nvar dw\nvar dw = bw < 0\n@:cond-branch dw"];
n3221 -> n3265[style="dashed",color="gray",label="then"];
n3221 -> n3266[style="dashed",color="gray",label="else"];
n3221 -> n3267[style="dashed",color="gray",label="next"];
n3220 [shape=box,label="(3220)\nvar hits = 0\nvar threshold = threshold & 255\nvar threshold = threshold << 24\nvar threshold = threshold >> 8\nvar threshold = threshold & 255\nvar threshold = threshold << 16\nvar threshold = threshold | threshold\nvar threshold = threshold >> 16\nvar threshold = threshold & 255\nvar threshold = threshold << 8\nvar threshold = threshold | threshold\nvar threshold = threshold >> 24\nvar threshold = threshold & 255\nthreshold = threshold | threshold\nvar color = color & 255\nvar color = color << 24\nvar color = color >> 8\nvar color = color & 255\nvar color = color << 16\nvar color = color | color\nvar color = color >> 16\nvar color = color & 255\nvar color = color << 8\nvar color = color | color\nvar color = color >> 24\nvar color = color & 255\ncolor = color | color\nvar memory = new openfl._legacy.utils.ByteArray(null)\nvar _hx_tmp = this.get_width()\nvar _hx_tmp = this.get_height()\nvar _hx_tmp = _hx_tmp * _hx_tmp\nvar _hx_tmp = _hx_tmp * 4\nmemory.setLength(_hx_tmp)\nvar memory = this.get_rect()\nmemory = this.getPixels(memory)\nmemory.position = 0\nopenfl._legacy.Memory.select(memory)\nvar thresholdMask = cast threshold & mask\nvar width_yy\nvar position\nvar pixelMask\nvar pixelValue\nvar i\nvar test"];
n3220 -> n3222[style="dashed",color="gray",label="sub"];
n3220 -> n3264[style="dashed",color="gray",label="next"];
n3219 [shape=box,label="(3219)\n@:cond-branch _hx_tmp"];
n3219 -> n3220[style="dashed",color="gray",label="then"];
n3219 -> n3221[style="dashed",color="gray",label="else"];
n3219 -> n0[style="dashed",color="gray",label="next"];
n3218 [shape=box,label="(3218)\n_hx_tmp = false"];
n3217 [shape=box,label="(3217)\n_hx_tmp = destPoint.y == 0"];
n3216 [shape=box,label="(3216)\n@:cond-branch _hx_tmp"];
n3216 -> n3217[style="dashed",color="gray",label="then"];
n3216 -> n3218[style="dashed",color="gray",label="else"];
n3216 -> n3219[style="dashed",color="gray",label="next"];
n3215 [shape=box,label="(3215)\n_hx_tmp = false"];
n3214 [shape=box,label="(3214)\n_hx_tmp = destPoint.x == 0"];
n3213 [shape=box,label="(3213)\n@:cond-branch _hx_tmp"];
n3213 -> n3214[style="dashed",color="gray",label="then"];
n3213 -> n3215[style="dashed",color="gray",label="else"];
n3213 -> n3216[style="dashed",color="gray",label="next"];
n3212 [shape=box,label="(3212)\n_hx_tmp = false"];
n3211 [shape=box,label="(3211)\nvar _hx_tmp = this.get_rect()\n_hx_tmp = sourceRect.equals(_hx_tmp)"];
n3210 [shape=box,label="<function-end>
(3210)"];
n3209 [shape=box,label="<function-begin>
(3209)\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp = sourceBitmapData == this\n@:cond-branch _hx_tmp"];
n3209 -> n3211[style="dashed",color="gray",label="then"];
n3209 -> n3212[style="dashed",color="gray",label="else"];
n3209 -> n3213[style="dashed",color="gray",label="next"];
n1 [shape=box,label="<root>
(1)"];
}
